{"version":3,"sources":["ndcActions.js","ndcConfigs.js","ndcExecute.js","ndcRest.js","ndcRoutes.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["import glob from 'glob'\nimport ndcExecute from './ndcExecute'\n\nconst loadActions = (path) => {\n  return new Promise((resolve, reject) => {\n    glob(`${path}/**/actions/*.js`, {}, (err, files) => {\n      if (err) return reject(err)\n\n      resolve(files.map((file) => {\n        let actionClass = require(file).default\n        actionClass.file = file\n        return actionClass\n      }))\n    })\n  })\n}\n\nconst organize = (actions) => {\n  let allActions = {}\n\n  for (let i = 0, c = actions.length; i < c; i++) {\n    const action = actions[i]\n    const { actionName, file } = action\n    const duplicated = allActions.hasOwnProperty(actionName)\n\n    if (duplicated) throw new Error(`Duplicity of action: \"${actionName}\" on files: \"${file}\" and \"${allActions[actionName].file}\"`)\n\n    allActions[actionName] = action\n  }\n\n  return allActions\n}\n\nconst ndcActions = (path) => {\n  return loadActions(path).then(organize).then((actions) => {\n    actions.execute = ndcExecute\n    return actions\n  })\n}\n\nexport default ndcActions\n","import ndcRoutes  from './ndcRoutes'\nimport ndcActions from './ndcActions'\n\nconst ndcConfigs = (path) => {\n  return ndcRoutes(path).then(routes => {\n    return ndcActions(path).then(actions => {\n      return {\n        routes: routes,\n        actions: actions\n      }\n    })\n  })\n}\n\nexport default ndcConfigs\n","const ndcExecute = function(context) {\n  const actionsPointers = context.exec.map(actionName => this[actionName])\n\n  let runActions = Promise.resolve()\n\n  actionsPointers.forEach(action => {\n    runActions = runActions.then(res => {\n      return action(res || {}, context)\n    })\n  })\n\n  return runActions.then(res => res || {})\n}\n\nexport default ndcExecute\n","\nimport ndcConfigs from './ndcConfigs'\n\nconst ndcRest = ({ path, app }) => {\n  return ndcConfigs(path).then(config => {\n    Object.keys(config.routes).map(key => {\n      return config.routes[key]\n    }).forEach(({ verb, path, exec }) => {\n      app[verb](path, (req, res, next) => {\n        const context = { app, req, res, config, exec }\n        config.actions.execute(context).then(next)\n      })\n    })\n\n    return app\n  })\n}\n\nexport default ndcRest\n","import glob from 'glob'\n\nconst loadRoutes = (path) => {\n  return new Promise((resolve, reject) => {\n    const patternSearch = `${path}/**/*Rest.json`\n\n    glob(patternSearch, {}, (err, files) => {\n      if (err) return reject(err)\n\n      let allRoutes = []\n\n      files.forEach((file) => {\n        require(file).forEach((route) => {\n          route.file = file\n          allRoutes.push(route)\n        })\n      })\n\n      resolve(allRoutes)\n    })\n  })\n}\n\nconst organize = (routes) => {\n  let config = {}\n\n  for (let i = 0, c = routes.length; i < c; i++) {\n    const route = routes[i]\n    const { verb, path, file } = route\n    const uri = `${verb.toUpperCase()}: ${path}`\n    const duplicated = config.hasOwnProperty(uri)\n\n    if (duplicated) throw new Error(`Duplicity of route: \"${uri}\" on files: \"${file}\" and \"${config[uri].file}\"`)\n\n    config[uri] = route\n  }\n\n  return config\n}\n\nconst ndcRoutes = (path) => {\n  return loadRoutes(path).then(organize)\n}\n\nexport default ndcRoutes\n"]}